% --------------------------------------------------------------------------
% the GUITARCHORDSCHEMES package
% 
%   Guitar Chord Tablatures with TikZ
% 
% --------------------------------------------------------------------------
% Clemens Niederberger
% Web:    https://bitbucket.org/cgnieder/guitarchordschemes/
% E-Mail: contact@mychemistry.eu
% --------------------------------------------------------------------------
% Copyright 2013 Clemens Niederberger
% 
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
% 
% This work has the LPPL maintenance status `maintained'.
% 
% The Current Maintainer of this work is Clemens Niederberger.
% --------------------------------------------------------------------------
% The guitarchordschemes package consists of the files
%  - guitarchordschemes.sty, README
% --------------------------------------------------------------------------
% If you have any ideas, questions, suggestions or bugs to report, please
% feel free to contact me.
% --------------------------------------------------------------------------
%
% package info and requirements:
\NeedsTeXFormat{LaTeX2e}
\def\gcs@date{2013/04/29}
\def\gcs@version{v0.1a}
\def\gcs@description{Guitar Chord Tablatures with TikZ (CN)}

\ProvidesPackage{guitarchordschemes}[\gcs@date\space \gcs@version\space \gcs@description]

\RequirePackage{tikz,etoolbox,pgfopts}
\usetikzlibrary{shapes.misc,arrows,calc}
% --------------------------------------------------------------------------
% message handling
\def\gcs@create@message#1{%
  \ifstrequal{#1}{Error}
    {%
      \lowercase{\csdef{gcs@#1}}##1##2{%
        \csuse{Package#1}{gcs}{##1}{##2}}%
    }{%
      \lowercase{\csdef{gcs@#1}}##1{%
        \csuse{Package#1}{gcs}{##1}}%
    }}
\gcs@create@message{Error}
\gcs@create@message{Warning}
\gcs@create@message{WarningNoLine}
\gcs@create@message{Info}

\def\gcs@missing@date@error#1#2{%
  \gcs@error
    {#1: empty #2}
    {#1: It seems you didn't specify the #2}%
}

% --------------------------------------------------------------------------
% package options and setup:
\newbool{gcs@rbc}

\def\gcs@finger@font{\sffamily\small}
\def\gcs@position@font{\sffamily}
\def\gcs@chord@name@font{\large}
\def\gcs@string@name@format{\small\sffamily}

\def\gcs@chord@x@unit{.8cm}
\def\gcs@chord@y@unit{.8cm}
\def\gcs@chord@line@width{1pt}
\def\gcs@finger@radius{.15cm}
\def\gcs@finger@x@offset{3mm}
\def\gcs@finger@y@offset{3mm}
\def\gcs@finger@color{black}
\def\gcs@root@color{black}
\def\gcs@showroot@color{black}
\def\gcs@ringing@color{black}
\def\gcs@muted@color{black}

\pgfkeys{
  guitarchordschemes/.cd ,
    x-unit/.code             = \def\gcs@chord@x@unit{#1} ,
    y-unit/.code             = \def\gcs@chord@y@unit{#1} ,
    finger-format/.code      = \def\gcs@finger@font{#1} ,
    position-format/.code    = \def\gcs@position@font{#1} ,
    name-format/.code        = \def\gcs@chord@name@font{#1} ,
    string-name-format/.code = \def\gcs@string@name@format{#1} ,
    line-width/.code         = \def\gcs@chord@line@width{#1} ,
    finger-radius/.code      = \def\gcs@finger@radius{#1} ,
    finger-x-offset/.code    = \def\gcs@finger@x@offset{#1} ,
    finger-y-offset/.code    = \def\gcs@finger@y@offset{#1} ,
    finger-color/.code       =
      \def\gcs@finger@color{#1}
      \def\gcs@root@color{#1}
      \def\gcs@showroot@color{#1} ,
    root-color/.code         =
      \def\gcs@root@color{#1}
      \def\gcs@showroot@color{#1} ,
    show-root-color/.code    = \def\gcs@showroot@color{#1} ,
    ringing-color/.code      = \def\gcs@ringing@color{#1} ,
    muted-color/.code        = \def\gcs@muted@color{#1} ,
    tuning/.code             = \gcs@chord@tuning{#1} ,
    use-rbc/.is if           = gcs@rbc
}

% the setup command:
\newrobustcmd*\setchordscheme[1]{\pgfqkeys{/guitarchordschemes}{#1}}

\newcounter{gcs@string@number}
\newcommand\gcs@chord@tuning[1]{%
  \setcounter{gcs@string@number}{0}%
  \foreach \string@name in {#1}
    {%
      \stepcounter{gcs@string@number}%
      \csxdef{guitar@string@\arabic{gcs@string@number}}{\expandonce\string@name}%
    }%
}

% default string numbering - needs to be set before options are processed:
\setchordscheme{
  tuning= {E,B,G,D,A,E}
}

\ProcessPgfOptions*

% --------------------------------------------------------------------------
% are we using `realbookchords'?
\ifbool{gcs@rbc}{\RequirePackage{realbookchords}}{}

% --------------------------------------------------------------------------
% settings for the whole scheme:
\tikzset{
  finger/.style =
    {
      xshift = \gcs@finger@x@offset ,
      yshift = \gcs@finger@y@offset ,
      font   = \gcs@finger@font
    }
}

% setting a scheme:
\pgfkeys{
  chord/.cd ,
    name/.code      = \gcs@chord@name{#1} ,
    position/.code  = \def\gcs@chord@position{#1} ,
    finger/.code    = \gcs@chord@finger{#1} ,
    root/.code      = \gcs@chord@root{#1} ,
    show-root/.code = \gcs@chord@show@root{#1} ,
    mute/.code      = \gcs@chord@mute{#1} ,
    ring/.code      = \gcs@chord@ring{#1} ,
    barre/.code     = \gcs@chord@barre{#1}
}

% --------------------------------------------------------------------------
% the internal commands

% placing fingers:
%   <fret>/<string>/<finger>
\newrobustcmd*\gcs@chord@finger[1]{%
  \foreach \finger@x/\finger@y/\finger@number in {#1}
    {
      \ifdefvoid\finger@x
        {\gcs@missing@date@error{finger}{position}}
        {
          \pgfmathsetmacro\finger@fret{1.5*\finger@x-0.75}
          \ifdefvoid\finger@y
            {\gcs@missing@date@error{finger}{string}}
            {
              \ifdefequal\finger@y\finger@number
                {\def\finger@number{}}{}
              \pgfmathsetmacro\finger@string{(6-\finger@y)*4/5}
              \draw[fill,\gcs@finger@color]
                (\finger@fret,\finger@string) circle (\gcs@finger@radius) ;
              \node[finger] at (\finger@fret,\finger@string) {\finger@number} ;
            }
        }
    }
}

% placing a barre:
%   <fret>/<string>-<string>/<finger>
\newrobustcmd*\gcs@chord@barre[1]{%
  \foreach \barre@x/\barre@fromto/\barre@finger in {#1}
    {
      \ifdefvoid\barre@x
        {\gcs@missing@date@error{barre}{position}}
        {\pgfmathsetmacro\barre@fret{1.5*\barre@x-0.75}}
      \ifdefvoid\barre@fromto
        {\gcs@missing@date@error{barre}{string range}}
        {
          \ifdefequal\barre@fromto\barre@finger
            {\def\barre@finger{}}{}
          \expandafter\gcs@barre@getstrings\barre@fromto--\q@stop
          \pgfmathsetmacro\barre@lower@string{(6-\barre@lower@y)*4/5}
          \pgfmathsetmacro\barre@upper@string{(6-\barre@upper@y)*4/5}
          \draw[\gcs@finger@color,round cap-round cap,line width=2*\gcs@finger@radius]
            (\barre@fret,\barre@lower@string) node[finger] {\barre@finger}
            ++ (0,\gcs@finger@radius)
            --
            ($(\barre@fret,\barre@upper@string)+(0,-\gcs@finger@radius)$)
          ;
        }
    }
}

\protected\def\gcs@barre@getstrings#1-#2-#3\q@stop{%
  \ifx#3-\relax
    \def\barre@lower@y{#1}%
    \def\barre@upper@y{#2}%
  \else
    \gcs@error
      {barre: wrong string range syntax}
      {barre: wrong string range syntax}%
  \fi
}

% placing root fingers:
%   <fret>/<string>/<finger>
\newrobustcmd*\gcs@chord@root[1]{%
  \foreach \finger@x/\finger@y/\finger@number in {#1}
    {
      \ifdefvoid\finger@x
        {\gcs@missing@date@error{root}{position}}
        {
          \pgfmathsetmacro\finger@fret{1.5*\finger@x-0.75}
          \ifdefvoid\finger@y
            {\gcs@missing@date@error{root}{string}}
            {
              \ifdefequal\finger@y\finger@number
                {\def\finger@number{}}{}
              \pgfmathsetmacro\finger@string{(6-\finger@y)*4/5}
              \node[fill,\gcs@root@color,minimum size=2*\gcs@finger@radius]
                at (\finger@fret,\finger@string) {} ;
              \node[finger] at (\finger@fret,\finger@string) {\finger@number} ;
            }
        }
    }
}

% placing ghost roots:
%   <fret>/<string>
\newrobustcmd*\gcs@chord@show@root[1]{%
  \foreach \finger@x/\finger@y in {#1}
    {
      \ifdefvoid\finger@x
        {\gcs@missing@date@error{show-root}{position}}
        {
          \pgfmathsetmacro\finger@fret{1.5*\finger@x-0.75}
          \ifdefvoid\finger@x
            {\gcs@missing@date@error{show-root}{string}}
            {
              \pgfmathsetmacro\finger@string{(6-\finger@y)*4/5}
              \node[draw,\gcs@showroot@color,minimum size=2*\gcs@finger@radius]
                at (\finger@fret,\finger@string) {} ;
            }
        }
    }
}

% muted strings:
\newrobustcmd*\gcs@chord@mute[1]{%
  \foreach \muted@string in {#1}
    {
      \pgfmathsetmacro\muted@string@pos{(6-\muted@string)*4/5}
      \node[\gcs@muted@color,cross out,draw] at (0,\muted@string@pos) {} ;
    }
}

% ringing strings:
\newrobustcmd*\gcs@chord@ring[1]{%
  \foreach \ringing@string in {#1}
    {
      \pgfmathsetmacro\ringing@string@pos{(6-\ringing@string)*4/5}
      \draw[\gcs@ringing@color]
        (0,\ringing@string@pos) circle (\gcs@finger@radius) ;
    }
}

% the chord name:
\newcommand*\gcs@chord@name[1]{%
  \node[above,yshift=4ex] at (3,4) {%
  \foreach \gcs@chord@name@variant in {#1}
    {%
      \gcs@chord@name@font
      \space
      \ifbool{gcs@rbc}
        {\expandafter\rbc\expandafter{\gcs@chord@name@variant}}
        {\gcs@chord@name@variant}%
      \space
    }%
  } ;
}

% --------------------------------------------------------------------------
% the user command:
\newrobustcmd*\chordscheme[1][]{%
\begingroup
\begin{tikzpicture}[
   x=\gcs@chord@x@unit,
   y=\gcs@chord@y@unit,
   line width=\gcs@chord@line@width,
   baseline=(6thstring)
 ]
 \coordinate (6thstring) at (0,0) ;
 \foreach \fret in { 0,1.5,3,4.5,6 }
   { \draw (\fret,0) -- (\fret,4) ; }
 \foreach \string@pos/\string@number in
   { 0/6, 0.8/5, 1.6/4, 2.4/3, 3.2/2, 4/1, 0 }
   {
     \draw (0,\string@pos) node[left,minimum width=2em]
       {\gcs@string@name@format\csuse{guitar@string@\string@number}} -- (6,\string@pos) ;
   }
 \pgfqkeys{/chord}{#1}%
 \ifdefvoid\gcs@chord@position
   {}
   {\node[above,yshift=1ex,font=\gcs@position@font] at (.75,4) {\gcs@chord@position} ;}
\end{tikzpicture}
\endgroup
}

% --------------------------------------------------------------------------
% the symbols for use outside of a scheme:
\newrobustcmd*\fingersymbol{%
  \tikz\draw[fill,\gcs@finger@color] (0,0) circle (\gcs@finger@radius);}

\newrobustcmd*\rootsymbol{%
  \tikz\node[fill,\gcs@root@color,minimum size=2*\gcs@finger@radius] at (0,0) {} ;}

\newrobustcmd*\showrootsymbol{%
  \tikz\node[
    draw,
    \gcs@showroot@color,
    minimum size=2*\gcs@finger@radius,
    line width=\gcs@chord@line@width] at (0,0) {} ;}

\newrobustcmd*\ringingstring{%
  \tikz\draw[
    draw,
    \gcs@ringing@color,
    line width=\gcs@chord@line@width] (0,0) circle (\gcs@finger@radius);}

\newrobustcmd*\mutedstring{%
  \tikz\node[
    cross out,
    draw,
    \gcs@muted@color,
    line width=\gcs@chord@line@width] at (0,0) {};}

\endinput
% --------------------------------------------------------------------------
% HISTORY
2013/04/28 v0.1  - first version
2013/04/29 v0.1a - added error handling and messages
